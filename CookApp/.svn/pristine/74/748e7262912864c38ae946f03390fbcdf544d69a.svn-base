package com.cookapp.cookapp.tools;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Handler;

@SuppressWarnings("deprecation")
public class GetFileHelper {
	GetFileHelper(String urlPath,String filePath){

	}

	GetFileHelper(String urlPath,String filePath,Handler handler){

	}

	public static String getUrlFileName(String urlPath){
		String result = urlPath.substring(urlPath.lastIndexOf('/')+1); 
		return result;
	}

	public static Uri getDownLoadFileURI(String urlPath,String filePath) throws Exception {
		// String name = MD5.getMD5(path) + path.substring(path.lastIndexOf("."));
		File file = new File(filePath);
		// 如果图片存在本地缓存目录，则不去服务器下载 
		if (file.exists()) {
			return Uri.fromFile(file);//Uri.fromFile(path)这个方法能得到文件的URI
		} else {
			// 从网络上获取图片
			URL url = new URL(urlPath);
			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
			conn.setConnectTimeout(5000);
			conn.setRequestMethod("GET");
			conn.setDoInput(true);
			if (conn.getResponseCode() == 200) {

				InputStream is = conn.getInputStream();
				FileOutputStream fos = new FileOutputStream(file);
				byte[] buffer = new byte[1024];
				int len = 0;
				while ((len = is.read(buffer)) != -1) {
					fos.write(buffer, 0, len);
				}
				is.close();
				fos.close();
				// 返回一个URI对象
				return Uri.fromFile(file);
			}
		}
		return null;
	}

	public static Bitmap getImageBitmap(String urlPath,String filePath) throws Exception {

		Bitmap bitmap=null;

		// String name = MD5.getMD5(path) + path.substring(path.lastIndexOf("."));
		File file = new File(filePath);
		// 如果图片存在本地缓存目录，则不去服务器下载 
		if (file.exists()) {

			InputStream is =new FileInputStream(file);

			bitmap = BitmapFactory.decodeStream(is);

			return bitmap;//Uri.fromFile(path)这个方法能得到文件的URI
		} else {
			// 从网络上获取图片
			URL url = new URL(urlPath);
			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
			conn.setConnectTimeout(5000);
			conn.setRequestMethod("GET");
			conn.setDoInput(true);
			if (conn.getResponseCode() == 200) {

				InputStream is = conn.getInputStream();
				// 将InputStream转换成Bitmap
				bitmap = BitmapFactory.decodeStream(is);
				FileOutputStream fos = new FileOutputStream(file);
				byte[] buffer = new byte[1024];
				int len = 0;
				while ((len = is.read(buffer)) != -1) {
					fos.write(buffer, 0, len);
				}
				is.close();
				fos.close();
				// 返回一个URI对象
				return bitmap;
			}
		}
		return bitmap;

	}
}
